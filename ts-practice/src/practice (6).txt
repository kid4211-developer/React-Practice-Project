/* Generics
 * - typeScript에서 함수, class, interface, type alias를 사용하게 될 때 여러 종류의 타입에 대하여 호환을 맞춰야 하는 상황에서 사용하는 문법
 * - 이렇게 함수에서 generics를 사용하면 parameter로 다양한 type을 넣을 수도 있고, 타입지원을 지켜낼 수 있음 */
function merge<A, B>(a: A, b: B): A & B {
    return {
        ...a,
        ...b,
    };
}

const merged = merge({ foo: 1 }, { bar: 1 });
console.log(merged); //{ foo: 1, bar: 1 }

function wrap<T>(param: T) {
    return {
        param,
    };
}

const wrapped = wrap(10);
console.log(wrapped); //{ param: 10 }
